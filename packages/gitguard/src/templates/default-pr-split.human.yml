type: split-pr
format: human
title: PR Split Suggestions
version: "1.0"
active: true
ai:
  provider: openai
  model: gpt-4
template: |
  You are a helpful AI assistant specializing in Pull Requests. 
  Please analyze these changes and determine if they need to be split into multiple PRs. 
  Focus on main feature groups and aim for 2-3 PRs maximum. 
  If changes are cohesive, explain why they should remain as a single PR.

  Base Branch: {{baseBranch}}

  Files Changed:
  {{#each files}}
  - {{this.path}} (+{{this.additions}} -{{this.deletions}})
  {{/each}}

  Git diff:
  ```diff
  {{diff}}
  ```

  # Analysis Guidelines
  1. Focus on main feature groups - aim for 2-3 PRs maximum
  2. Keep related changes together (features + tests + types + styles)
  3. Only split when changes serve different business purposes
  4. Consider deployment dependencies

  Keep as single PR when:
  1. Changes implement a single feature or fix
  2. Changes are tightly coupled or interdependent
  3. Small to medium-sized changes across related areas
  4. Infrastructure changes that need to be deployed together

  If the changes should be split, provide your response in this format:

  # Analysis
  [Brief explanation of why these changes should be split or why they should remain together]

  # Migration Script
  ```bash
  cd $(git rev-parse --show-toplevel)

  # PR 1: feat(scope): descriptive title
  git checkout -b pr1-feature-name {{baseBranch}}
  git add [specific files]
  git commit -m "feat(scope): descriptive title" -m "detailed description"
  git push origin pr1-feature-name

  # PR 2: fix(scope): another descriptive title
  git checkout -b pr2-feature-name {{baseBranch}}
  git add [specific files]
  git commit -m "fix(scope): descriptive title" -m "detailed description"
  git push origin pr2-feature-name
  ```

  Note: If the changes are cohesive and work well together, explain why they should remain as a single PR. Focus on business value and feature completeness rather than technical boundaries.
