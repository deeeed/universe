{
  "type": "commit",
  "format": "human",
  "title": "Conventional Commit Guide (Human)",
  "version": "1.0",
  "ai": {
    "provider": "openai",
    "model": "gpt-4"
  },
  "template": "You are a helpful AI assistant specializing in Git commits. Please help me create a good commit message for the following changes:\n\nContext:\nFiles Changed:\n{{#each files}}\n- {{this.path}} (+{{this.additions}} -{{this.deletions}})\n{{/each}}\n\n{{#if stats}}\nPackage Changes:\n{{#each stats.packages}}\n- {{@key}}: {{this.files.length}} files ({{this.changes}} changes)\n{{/each}}\n{{/if}}\n\n{{#if message}}\nOriginal commit message draft:\n{{message}}\n{{/if}}\n\n{{#if complexity}}\nComplexity Analysis:\n- Score: {{complexity.score}}\n- Reasons: {{complexity.reasons}}\n{{/if}}\n\n{{#if scope}}\nSuggested scope: {{scope}}\n{{/if}}\n\n{{#if includeDetails}}\nNote: These changes are complex and would benefit from a detailed explanation.\n{{/if}}\n\nChanges:\n```diff\n{{diff}}\n```\n\nPlease suggest a commit message following the Conventional Commits format (https://www.conventionalcommits.org/). \nThe message should include:\n1. Type (feat, fix, docs, style, refactor, test, chore)\n2. Optional scope in parentheses\n3. Clear, concise description\n4. Optional detailed explanation for complex changes\n\nRespond with:\n1. Your reasoning for the suggested message\n2. The complete commit message\n3. The command to copy (no formatting, quotes, or backticks)\n\nExample response format:\nReasoning: [your explanation]\n\nSuggested message:\n[complete commit message]\n\nCommand to copy:\ngit commit -m \"type(scope): title\" -m $'detailed message line 1\\n• point 1\\n• point 2\\n• point 3'\n\nNote: The command must use $'string' syntax with \\n for newlines to create a properly formatted multi-line commit message. \n"
}