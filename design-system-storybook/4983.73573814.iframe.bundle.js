(self.webpackChunk_siteed_design_system=self.webpackChunk_siteed_design_system||[]).push([[560,4983],{"./src/components/FAB/FABGroup.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.FABGroup=void 0;var _toConsumableArray2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/toConsumableArray.js")),_slicedToArray2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js")),React=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_Animated=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/Animated/index.js")),_Pressable=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/Pressable/index.js")),_StyleSheet=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/StyleSheet/index.js")),_View=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/View/index.js")),_reactNativeSafeAreaContext=__webpack_require__("./node_modules/react-native-safe-area-context/lib/module/index.js"),_reactNativePaper=__webpack_require__("./node_modules/react-native-paper/lib/module/index.js"),_utils=__webpack_require__("./src/components/FAB/utils.ts"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}var AnimatedPressable=_Animated.default.createAnimatedComponent(_Pressable.default);(exports.FABGroup=function FABGroup(_ref){var actions=_ref.actions,icon=_ref.icon,open=_ref.open,_onPress=_ref.onPress,_onLongPress=_ref.onLongPress,toggleStackOnLongPress=_ref.toggleStackOnLongPress,accessibilityLabel=_ref.accessibilityLabel,style=_ref.style,fabStyle=_ref.fabStyle,visible=_ref.visible,label=_ref.label,testID=_ref.testID,onStateChange=_ref.onStateChange,colorProp=_ref.color,_ref$delayLongPress=_ref.delayLongPress,delayLongPress=void 0===_ref$delayLongPress?200:_ref$delayLongPress,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"primary":_ref$variant,_ref$enableLongPressW=_ref.enableLongPressWhenStackOpened,enableLongPressWhenStackOpened=void 0!==_ref$enableLongPressW&&_ref$enableLongPressW,customBackdropColor=_ref.backdropColor,rippleColor=_ref.rippleColor,theme=(0,_reactNativePaper.useTheme)(),backdrop=React.useRef(new _Animated.default.Value(0)).current,animations=React.useRef(actions.map((function(){return new _Animated.default.Value(open?1:0)}))),_React$useState=React.useState(null),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),prevActions=_React$useState2[0],setPrevActions=_React$useState2[1],scale=theme.animation.scale,isV3=theme.isV3;React.useEffect((function(){open?_Animated.default.parallel([_Animated.default.timing(backdrop,{toValue:1,duration:250*scale,useNativeDriver:!0}),_Animated.default.stagger(isV3?15:50*scale,animations.current.map((function(animation){return _Animated.default.timing(animation,{toValue:1,duration:150*scale,useNativeDriver:!0})})).reverse())]).start():_Animated.default.parallel([_Animated.default.timing(backdrop,{toValue:0,duration:200*scale,useNativeDriver:!0})].concat((0,_toConsumableArray2.default)(animations.current.map((function(animation){return _Animated.default.timing(animation,{toValue:0,duration:150*scale,useNativeDriver:!0})}))))).start()}),[open,actions,backdrop,scale,isV3]);var close=function close(){return onStateChange({open:!1})},toggle=function toggle(){return onStateChange({open:!open})},_getFABGroupColors=(0,_utils.getFABGroupColors)({theme,customBackdropColor}),labelColor=_getFABGroupColors.labelColor,backdropColor=_getFABGroupColors.backdropColor,stackedFABBackgroundColor=_getFABGroupColors.stackedFABBackgroundColor,backdropOpacity=open?backdrop.interpolate({inputRange:[0,.5,1],outputRange:[0,1,1]}):backdrop,opacities=animations.current,scales=opacities.map((function(opacity){return open?opacity.interpolate({inputRange:[0,1],outputRange:[.5,1]}):1})),translations=opacities.map((function(opacity){return open?opacity.interpolate({inputRange:[0,1],outputRange:[24,-8]}):-8})),labelTranslations=opacities.map((function(opacity){return open?opacity.interpolate({inputRange:[0,1],outputRange:[8,-8]}):-8})),_useSafeAreaInsets=(0,_reactNativeSafeAreaContext.useSafeAreaInsets)(),top=_useSafeAreaInsets.top,containerPaddings={paddingBottom:_useSafeAreaInsets.bottom,paddingRight:_useSafeAreaInsets.right,paddingLeft:_useSafeAreaInsets.left,paddingTop:top};return actions.length!==(null==prevActions?void 0:prevActions.length)&&(animations.current=actions.map((function(_,i){return animations.current[i]||new _Animated.default.Value(open?1:0)})),setPrevActions(actions)),(0,_jsxRuntime.jsxs)(_View.default,{pointerEvents:"box-none",style:[styles.container,containerPaddings,style],children:[(0,_jsxRuntime.jsx)(AnimatedPressable,{accessibilityRole:"button",onPress:close,pointerEvents:open?"auto":"none",style:[styles.backdrop,{opacity:backdropOpacity,backgroundColor:backdropColor}]}),(0,_jsxRuntime.jsxs)(_View.default,{pointerEvents:"box-none",style:styles.safeArea,children:[open&&(0,_jsxRuntime.jsx)(_View.default,{pointerEvents:open?"box-none":"none",children:actions.map((function(it,i){var _it$labelTextColor,labelTextStyle=Object.assign({color:null!=(_it$labelTextColor=it.labelTextColor)?_it$labelTextColor:labelColor},isV3?theme.fonts.titleMedium:{}),marginHorizontal=void 0===it.size||"small"===it.size?24:16,accessibilityLabel=void 0!==it.accessibilityLabel?it.accessibilityLabel:it.label,size=void 0!==it.size?it.size:"small";return(0,_jsxRuntime.jsxs)(_View.default,{style:[styles.item,{marginHorizontal}],pointerEvents:open?"box-none":"none",accessibilityRole:"button",importantForAccessibility:"yes",accessible:!0,accessibilityLabel,children:[it.label&&(0,_jsxRuntime.jsx)(_View.default,{children:(0,_jsxRuntime.jsx)(_reactNativePaper.Card,{mode:isV3?"contained":"elevated",onPress:function onPress(e){it.onPress(e),close()},accessibilityHint:it.accessibilityHint,importantForAccessibility:"no-hide-descendants",accessibilityElementsHidden:!0,style:[styles.containerStyle,{transform:[isV3?{translateY:labelTranslations[i]}:{scale:scales[i]}],opacity:opacities[i]},isV3&&styles.v3ContainerStyle,it.containerStyle],children:(0,_jsxRuntime.jsx)(_reactNativePaper.Text,{variant:"titleMedium",importantForAccessibility:"no-hide-descendants",accessibilityElementsHidden:!0,style:[labelTextStyle,it.labelStyle],maxFontSizeMultiplier:it.labelMaxFontSizeMultiplier,children:it.label})})}),(0,_jsxRuntime.jsx)(_reactNativePaper.FAB,{size,icon:it.icon,color:it.color,style:[{transform:[{scale:scales[i]}],opacity:opacities[i],backgroundColor:stackedFABBackgroundColor},isV3&&{transform:[{translateY:translations[i]}]},it.style],accessibilityElementsHidden:!0,theme,onPress:function onPress(e){it.onPress(e),close()},importantForAccessibility:"no-hide-descendants",testID:it.testID,visible:open,rippleColor:it.rippleColor})]},i)}))}),(0,_jsxRuntime.jsx)(_reactNativePaper.FAB,{onPress:function onPress(e){null==_onPress||_onPress(e),toggleStackOnLongPress&&!open||toggle()},onLongPress:function onLongPress(e){open&&!enableLongPressWhenStackOpened||(null==_onLongPress||_onLongPress(e),toggleStackOnLongPress&&toggle())},delayLongPress,icon,color:colorProp,accessibilityLabel,accessibilityRole:"button",accessibilityState:{expanded:open},style:[styles.fab,fabStyle],theme,visible,label,testID,variant,rippleColor})]})]})}).displayName="FAB.Group";var styles=_StyleSheet.default.create({safeArea:{alignItems:"flex-end"},container:Object.assign({},_StyleSheet.default.absoluteFillObject,{justifyContent:"flex-end"}),fab:{marginHorizontal:16,marginBottom:16,marginTop:0},backdrop:Object.assign({},_StyleSheet.default.absoluteFillObject),containerStyle:{borderRadius:5,paddingHorizontal:12,paddingVertical:6,marginVertical:8,marginHorizontal:16,elevation:2},item:{marginBottom:16,flexDirection:"row",justifyContent:"flex-end",alignItems:"center"},v3ContainerStyle:{backgroundColor:"transparent",elevation:0}});try{FAB.Group.displayName="FAB.Group",FAB.Group.__docgenInfo={description:"A component to display a stack of FABs with related actions in a speed dial.\nTo render the group above other components, you'll need to wrap it with the [`Portal`](../Portal) component.\n\n## Usage\n```js\nimport * as React from 'react';\nimport { FAB, Portal, PaperProvider } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [state, setState] = React.useState({ open: false });\n\n  const onStateChange = ({ open }) => setState({ open });\n\n  const { open } = state;\n\n  return (\n    <PaperProvider>\n      <Portal>\n        <FAB.Group\n          open={open}\n          visible\n          icon={open ? 'calendar-today' : 'plus'}\n          actions={[\n            { icon: 'plus', onPress: () => console.log('Pressed add') },\n            {\n              icon: 'star',\n              label: 'Star',\n              onPress: () => console.log('Pressed star'),\n            },\n            {\n              icon: 'email',\n              label: 'Email',\n              onPress: () => console.log('Pressed email'),\n            },\n            {\n              icon: 'bell',\n              label: 'Remind',\n              onPress: () => console.log('Pressed notifications'),\n            },\n          ]}\n          onStateChange={onStateChange}\n          onPress={() => {\n            if (open) {\n              // do something if the speed dial is open\n            }\n          }}\n        />\n      </Portal>\n    </PaperProvider>\n  );\n};\n\nexport default MyComponent;\n```",displayName:"FAB.Group",props:{actions:{defaultValue:null,description:"Action items to display in the form of a speed dial.\nAn action item should contain the following properties:\n- `icon`: icon to display (required)\n- `label`: optional label text\n- `color`: custom icon color of the action item\n- `labelTextColor`: custom label text color of the action item\n- `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n- `accessibilityHint`: accessibility hint for the action\n- `style`: pass additional styles for the fab item, for example, `backgroundColor`\n- `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor`\n@supported Available in 5.x\n- `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n- `labelMaxFontSizeMultiplier`: specifies the largest possible scale a title font can reach.\n- `onPress`: callback that is called when `FAB` is pressed (required)\n- `onLongPress`: callback that is called when `FAB` is long pressed\n- `toggleStackOnLongPress`: callback that is called when `FAB` is long pressed\n- `size`: size of action item. Defaults to `small`.\n@supported Available in v5.x\n- `testID`: testID to be used on tests\n- `rippleColor`: color of the ripple effect.",name:"actions",required:!0,type:{name:"{ icon: IconSource; label?: string | undefined; color?: string | undefined; labelTextColor?: string | undefined; accessibilityLabel?: string | undefined; accessibilityHint?: string | undefined; ... 7 more ...; rippleColor?: ColorValue | undefined; }[]"}},icon:{defaultValue:null,description:"Icon to display for the `FAB`.\nYou can toggle it based on whether the speed dial is open to display a different icon.",name:"icon",required:!0,type:{name:"IconSource"}},accessibilityLabel:{defaultValue:null,description:"Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.",name:"accessibilityLabel",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Custom color for the `FAB`.",name:"color",required:!1,type:{name:"string"}},backdropColor:{defaultValue:null,description:"Custom backdrop color for opened speed dial background.",name:"backdropColor",required:!1,type:{name:"string"}},rippleColor:{defaultValue:null,description:"Color of the ripple effect.",name:"rippleColor",required:!1,type:{name:"ColorValue"}},onPress:{defaultValue:null,description:"Function to execute on pressing the `FAB`.",name:"onPress",required:!1,type:{name:"((e: GestureResponderEvent) => void)"}},onLongPress:{defaultValue:null,description:"Function to execute on long pressing the `FAB`.",name:"onLongPress",required:!1,type:{name:"((e: GestureResponderEvent) => void)"}},toggleStackOnLongPress:{defaultValue:null,description:"Makes actions stack appear on long press instead of on press.",name:"toggleStackOnLongPress",required:!1,type:{name:"boolean"}},delayLongPress:{defaultValue:{value:"200"},description:"Changes the delay for long press reaction.",name:"delayLongPress",required:!1,type:{name:"number"}},enableLongPressWhenStackOpened:{defaultValue:{value:"false"},description:"Allows for onLongPress when stack is opened.",name:"enableLongPressWhenStackOpened",required:!1,type:{name:"boolean"}},open:{defaultValue:null,description:"Whether the speed dial is open.",name:"open",required:!0,type:{name:"boolean"}},onStateChange:{defaultValue:null,description:"Callback which is called on opening and closing the speed dial.\nThe open state needs to be updated when it's called, otherwise the change is dropped.",name:"onStateChange",required:!0,type:{name:"(state: { open: boolean; }) => void"}},visible:{defaultValue:null,description:"Whether `FAB` is currently visible.",name:"visible",required:!0,type:{name:"boolean"}},style:{defaultValue:null,description:"Style for the group. You can use it to pass additional styles if you need.\nFor example, you can set an additional padding if you have a tab bar at the bottom.",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>"}},fabStyle:{defaultValue:null,description:"Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.",name:"fabStyle",required:!1,type:{name:'false | "" | RegisteredStyle<ViewStyle> | Value | AnimatedInterpolation<string | number> | WithAnimatedObject<ViewStyle> | WithAnimatedArray<...> | null'}},variant:{defaultValue:{value:"primary"},description:"@supported Available in v5.x with theme version 3\n\nColor mappings variant for combinations of container and icon colors.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"surface"'}]}},theme:{defaultValue:null,description:"@optional",name:"theme",required:!1,type:{name:"ThemeProp"}},label:{defaultValue:null,description:"Optional label for `FAB`.",name:"label",required:!1,type:{name:"string"}},testID:{defaultValue:null,description:"Pass down testID from Group props to FAB.",name:"testID",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/FAB/FABGroup.tsx#FAB.Group"]={docgenInfo:FAB.Group.__docgenInfo,name:"FAB.Group",path:"src/components/FAB/FABGroup.tsx#FAB.Group"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/FAB/utils.ts":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.getFABGroupColors=void 0;var _color=_interopRequireDefault(__webpack_require__("./node_modules/color/index.js")),getLabelColor=function getLabelColor(_ref){var theme=_ref.theme;return theme.isV3?theme.colors.onSurface:theme.dark?theme.colors.text:(0,_color.default)(theme.colors.text).fade(.54).rgb().string()},getBackdropColor=function getBackdropColor(_ref2){var _theme$colors,theme=_ref2.theme,customBackdropColor=_ref2.customBackdropColor;return customBackdropColor||(theme.isV3?(0,_color.default)(theme.colors.background).alpha(.95).rgb().string():null==(_theme$colors=theme.colors)?void 0:_theme$colors.backdrop)},getStackedFABBackgroundColor=function getStackedFABBackgroundColor(_ref3){var theme=_ref3.theme;return theme.isV3?theme.colors.elevation.level3:theme.colors.surface};exports.getFABGroupColors=function getFABGroupColors(_ref4){var theme=_ref4.theme,customBackdropColor=_ref4.customBackdropColor;return{labelColor:getLabelColor({theme}),backdropColor:getBackdropColor({theme,customBackdropColor}),stackedFABBackgroundColor:getStackedFABBackgroundColor({theme})}}}}]);