(self.webpackChunk_siteed_design_system=self.webpackChunk_siteed_design_system||[]).push([[1357,4464],{"./src/components/Picker/Picker.stories.tsx":(module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.WrapOptions=exports.WithSearch=exports.WithColors=exports.Primary=exports.NoSelectionWithOptions=exports.NoSelection=exports.EmptyState=exports.CustomPressBehavior=exports.AllSelected=void 0;var _slicedToArray2=_interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js")),_react=function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}(__webpack_require__("./node_modules/react/index.js")),_View=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/View/index.js")),_mock_data=__webpack_require__("./src/_mocks/mock_data.tsx"),_Picker=__webpack_require__("./src/components/Picker/Picker.tsx"),_useToast2=__webpack_require__("./src/hooks/useToast/useToast.tsx"),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}var options=[{label:"Daily Sentences",value:"1",selected:!0},{label:"Custom Cards",value:"2"},{label:"Greetings",value:"3"},{label:"Dinings & Food",value:"4"},{label:"Shopping",selected:!0,value:"5"},{label:"Direction & Transportation",value:"6"},{label:"Accommodation",value:"7"}],CategoryPickerMeta={component:_Picker.Picker,title:"Components/Picker",tags:["autodocs"],argTypes:{},args:{label:"Category",options,multi:!0,onFinish:function onFinish(selected){console.log("Selected options:",selected)}}};exports.default=CategoryPickerMeta,exports.Primary={args:{},parameters:{docs:{description:{story:"The primary `Picker` component allowing multiple selections. The selected options are logged in the console."},source:{code:'<Picker label="Category" options={options} multi={true} />'}}}},exports.WithSearch={args:Object.assign({},CategoryPickerMeta.args,{showSearch:!0}),parameters:{docs:{description:{story:"This variant enables the search functionality, allowing users to filter options by typing in the search field."},source:{code:'\n<Picker \n  label="Category" \n  options={options} \n  multi={true} \n  showSearch={true} \n/>\n        '}}}},exports.EmptyState={args:Object.assign({},CategoryPickerMeta.args,{options:[],emptyLabel:"No categories available"}),parameters:{docs:{description:{story:"This variant demonstrates how the `Picker` component handles an empty state when no options are provided."},source:{code:'\n<Picker \n  label="Category" \n  options={[]} \n  multi={true} \n  emptyLabel="No categories available" \n/>\n        '}}}},exports.WrapOptions={args:Object.assign({},CategoryPickerMeta.args,{fullWidthOptions:!1}),parameters:{docs:{description:{story:"This variant of the `Picker` displays options that do not take up the full width of the modal, showcasing how options are laid out with `fullWidthOptions=false`."},source:{code:'\n<Picker \n  label="Category" \n  options={options} \n  multi={true} \n  fullWidthOptions={false} \n/>\n        '}}}},exports.NoSelection={args:{options:[]},parameters:{docs:{description:{story:"This variant of the `Picker` shows an empty state when no options are available."},source:{code:'<Picker label="Category" options={[]} multi={true} />'}}}},exports.NoSelectionWithOptions={args:{options:[{label:"Daily Sentences",value:"1",selected:!1}]},parameters:{docs:{description:{story:"This variant of the `Picker` shows a single option that is not selected."},source:{code:"\n<Picker \n  label=\"Category\" \n  options={[{ label: 'Daily Sentences', value: '1', selected: false }]} \n  multi={true} \n/>\n        "}}}},exports.WithColors={args:Object.assign({},CategoryPickerMeta.args,{options:options.map((function(opt,index){var _colorOptions;return Object.assign({},opt,{color:null==(_colorOptions=_mock_data.colorOptions[index%_mock_data.colorOptions.length])?void 0:_colorOptions.value})}))}),decorators:[function(Story,context){var args=context.args,_useState=(0,_react.useState)(args.options),_useState2=(0,_slicedToArray2.default)(_useState,2),options=_useState2[0],setOptions=_useState2[1];return(0,_jsxRuntime.jsx)(_View.default,{children:(0,_jsxRuntime.jsx)(Story,Object.assign({},args,{options,onFinish:function onFinish(selected){setOptions(selected),null==args.onFinish||args.onFinish(selected)}}))})}],parameters:{docs:{description:{story:"This variant of the `Picker` showcases options with assigned colors, allowing for a more visual selection process."},source:{code:'\nconst optionsWithColors = options.map((opt, index) => ({\n  ...opt,\n  color: colorOptions[index % colorOptions.length]?.value,\n}));\n\n<Picker \n  label="Category" \n  options={optionsWithColors} \n  multi={true} \n/>\n        '}}}},exports.AllSelected={args:Object.assign({},CategoryPickerMeta.args,{options:options.map((function(opt){return Object.assign({},opt,{selected:!0})}))}),parameters:{docs:{description:{story:"In this variant, all options are pre-selected, demonstrating the component's state when all options are chosen by default."},source:{code:'\nconst allSelectedOptions = options.map(opt => ({ ...opt, selected: true }));\n\n<Picker \n  label="Category" \n  options={allSelectedOptions} \n  multi={true} \n/>\n        '}}}},exports.CustomPressBehavior={decorators:[function(_Story,context){var args=context.args,show=(0,_useToast2.useToast)().show;return(0,_jsxRuntime.jsx)(_View.default,{children:(0,_jsxRuntime.jsx)(_Picker.Picker,Object.assign({},args,{options,onItemPress:function onItemPress(item){show({message:`CUSTOM ACTION Item pressed: ${item.label}`})}}))})}],parameters:{docs:{source:{code:'<Picker label="Category" options={options} onItemPress={(item) => console.log("item pressed", item)} />'}}}};module.exports.__namedExportsOrder=["WrapOptions","WithSearch","WithColors","Primary","NoSelectionWithOptions","NoSelection","EmptyState","CustomPressBehavior","AllSelected"]},"./src/hooks/useToast/useToast.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.useToast=void 0;var _react=__webpack_require__("./node_modules/react/index.js"),_ToastProvider=__webpack_require__("./src/providers/ToastProvider.tsx"),useToast=exports.useToast=function useToast(){var toast=(0,_react.useContext)(_ToastProvider.ToastContext);if(!toast)throw new Error("useToast must be used within a ToastProvider.");return toast};try{useToast.displayName="useToast",useToast.__docgenInfo={description:"useToast hook is used to show and hide Toast messages.\n## Usage\nImport the `useToast` hook from the library. Calling it will return you an object with two functions `show` and `hide` to show or hide toast.\n\n```tsx\nimport { useToast } from 'react-native-paper-toast';\n\nexport const Screen: React.FC<Props> = (props) => {\n  const toaster = useToast();\n  // You can now toast methods from handler functions, effects or onPress props!\n\n  // Call from handler function\n  const handleError = () =>\n    toaster.show({ message: 'Invalid Username', type: 'error' });\n\n  // Call from Effects\n  useEffect(() => {\n    login(username, password).then((v) =>\n      toaster.show({ message: 'Login successful', duration: 2000 })\n    );\n  });\n\n  return (\n   <Surface>\n     <Button onPress={() => toaster.show({ message: 'Here is a toast for ya!' })}>\n       Show Toast\n     </Button>\n     <Button onPress={toaster.hide}>Hide Toast</Button>\n   </Surface>\n );\n};\n```",displayName:"useToast",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/useToast/useToast.tsx#useToast"]={docgenInfo:useToast.__docgenInfo,name:"useToast",path:"src/hooks/useToast/useToast.tsx#useToast"})}catch(__react_docgen_typescript_loader_error){}}}]);